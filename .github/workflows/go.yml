name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  issues: write
  pull-requests: write
  contents: write
  packages: write

jobs:
  build:
    strategy:
      matrix:
        kind: [ 'linux' ]
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
            release_suffix: ''
    #          - kind: macOS
    #            os: macos-latest
    #            target: osx-x64
    #            release_suffix: ''
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Build
        run: go build -o ./build/${{ matrix.os }}-bebop

      #    - name: Test
      #      run: go test -v ./...
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-bebop
          path: ./build/${{ matrix.os }}-bebop

  release:
    needs: [ build ]
    runs-on: ubuntu-20.04
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3

      - id: release_version
        run: |
          bebop=./ubuntu-latest-bebop/ubuntu-latest-bebop
          chmod +x ${bebop}
          ls -R ./ubuntu-latest-bebop
          version=$(${bebop} project version --bump patch --release-file ./release.yml)
          echo ::set-output name=release_version::${version}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.release_version.outputs.release_version }}
          name: ${{ steps.release_version.outputs.release_version }}

      - name: Bump version
        id: bump_version
        run: |
          commitId=$(git show -s --format=%H)
          releaseId=${{ steps.create_release.outputs.id }}
          echo release-id: ${releaseId}
          
          bebop=./ubuntu-latest-bebop/ubuntu-latest-bebop
          version=$(${bebop} project version --bump patch --release-file ./release.yml --releaseId ${releaseId} --commitId ${commitId})
          
          git config --global user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config --global user.email "$(git --no-pager log --format=format:'%ae' -n 1)"          
          git commit -am "New Release"
          git push 

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.url }}
          asset_path: ./ubuntu-latest-bebop
          asset_name: ubuntu-latest-bebop
          asset_content_type: application/x-binary
